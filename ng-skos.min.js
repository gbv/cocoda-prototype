function knownSchemes(OpenSearchSuggestions,SkosConceptProvider,SkosConceptListProvider){this.gnd={name:"GND",suggest:new OpenSearchSuggestions({url:"http://api.lobid.org/subject?format=ids&name=",transform:function(response){return{values:response.map(function(s){return{label:s.label,uri:s.value}})}},jsonp:!0}),getNarrower:new SkosConceptProvider({url:"http://lobid.org/subject?format=full&id={uri}"}),getConcept:new SkosConceptProvider({url:"http://lobid.org/subject?format=full&id={uri}",transform:function(item){var graph=item[1]["@graph"][0],concept={notation:[graph.gndIdentifier],uri:graph["@id"],prefLabel:{de:""},broader:[],related:[]};graph.preferredName?concept.prefLabel.de=graph.preferredName:graph.preferredNameForThePlaceOrGeographicName?concept.prefLabel.de=graph.preferredNameForThePlaceOrGeographicName:graph.preferredNameOfThePerson?concept.prefLabel.de=graph.preferredNameOfThePerson:graph.preferredNameEntityForThePerson?concept.prefLabel.de=graph.preferredNameEntityForThePerson:graph.preferredNameForTheConferenceOrEvent?concept.prefLabel.de=graph.preferredNameForTheConferenceOrEvent:graph.preferredNameForTheCorporateBody?concept.prefLabel.de=graph.preferredNameForTheCorporateBody:graph.preferredNameForTheFamily?concept.prefLabel.de=graph.preferredNameForTheFamily:graph.preferredNameForThePerson?concept.prefLabel.de=graph.preferredNameForThePerson:graph.preferredNameForTheSubjectHeading?concept.prefLabel.de=graph.preferredNameForTheSubjectHeading:graph.preferredNameForTheWork&&(concept.prefLabel.de=graph.preferredNameForTheWork),graph.variantName?concept.altLabel=graph.variantName:graph.variantNameForThePlaceOrGeographicName?concept.altLabel=graph.variantNameForThePlaceOrGeographicName:graph.variantNameEntityForThePerson?concept.altLabel=graph.variantNameEntityForThePerson:graph.variantNameForTheConferenceOrEvent?concept.altLabel=graph.variantNameForTheConferenceOrEvent:graph.variantNameForTheCorporateBody?concept.altLabel=graph.variantNameForTheCorporateBody:graph.variantNameForTheFamily?concept.altLabel=graph.variantNameForTheFamily:graph.variantNameForThePerson?concept.altLabel=graph.variantNameForThePerson:graph.variantNameForTheSubjectHeading?concept.altLabel=graph.variantNameForTheSubjectHeading:graph.variantNameForTheWork&&(concept.altLabel=graph.variantNameForTheWork),angular.isString(concept.altLabel)&&(concept.altLabel=[concept.altLabel]);var broader=[];return graph.broaderTermGeneral&&(broader=graph.broaderTermGeneral),graph.broaderTermPartitive&&(broader.length?angular.forEach(graph.broaderTermPartitive,function(bterm){broader.push(bterm)}):broader=graph.broaderTermPartitive),angular.isArray(broader)?0!=broader.length&&angular.forEach(broader,function(bterm){concept.broader.push({uri:bterm})}):angular.isString(broader)&&(concept.broader=[{uri:broader}]),angular.isArray(graph.relatedTerm)?angular.forEach(graph.relatedTerm,function(rterm){concept.related.push({uri:rterm})}):angular.isString(graph.relatedTerm)&&(concept.related=[{uri:graph.relatedTerm}]),concept},jsonp:!0})};var rvkTransform=function(nodes){return{values:nodes.map(function(v){return{label:v.benennung,notation:v.notation}})}};this.rvk={name:"RVK",topConcepts:new SkosConceptListProvider({url:"http://rvk.uni-regensburg.de/api/json/children",jsonp:"jsonp",transform:function(response){return rvkTransform(response.node.children.node)}}),suggest:new OpenSearchSuggestions({url:"http://rvk.uni-regensburg.de/api/json/nodes/{searchTerms}",jsonp:"jsonp",transform:function(response){return rvkTransform(response.node)},jsonp:"jsonp"}),getConcept:new SkosConceptProvider({url:"http://rvk.uni-regensburg.de/api/json/node/{notation}",transform:function(item){var concept={notation:[item.node.notation],uri:item.node.notation,prefLabel:{de:item.node.benennung},altLabel:"",hasChildren:!1};return angular.isArray(item.node.register)?concept.altLabel=item.node.register:angular.isString(item.node.register)&&(concept.altLabel=[item.node.register]),"yes"==item.node.has_children&&(concept.hasChildren=!0),concept},jsonp:"jsonp"}),getNarrower:new SkosConceptProvider({url:"http://rvk.uni-regensburg.de/api/json/children/{notation}",transform:function(item){var concept={notation:[item.node.notation],uri:item.node.notation,prefLabel:{de:item.node.benennung},narrower:[],broader:[]};return item.node.nochildren||(angular.isArray(item.node.children.node)?angular.forEach(item.node.children.node,function(nterm){concept.narrower.push({uri:nterm.notation,prefLabel:{de:nterm.benennung},notation:[nterm.notation]})}):angular.isString(item.node.children.node)&&(concept.narrower=[{uri:item.node.children.node.notation,prefLabel:{de:item.node.children.node.benennung},notation:[item.node.children.node.notation]}])),concept},jsonp:"jsonp"}),getBroader:new SkosConceptProvider({url:"http://rvk.uni-regensburg.de/api/json/ancestors/{notation}",transform:function(item){var concept={notation:[item.node.notation],uri:item.node.notation,prefLabel:{de:item.node.benennung},broader:[]};return item.node.ancestor&&concept.broader.push({notation:[item.node.ancestor.node.notation],uri:item.node.ancestor.node.notation,prefLabel:{de:item.node.ancestor.node.benennung}}),concept},jsonp:"jsonp"})},this.wikidata={name:"Wikidata",getConcept:new SkosConceptProvider({url:"http://www.wikidata.org/w/api.php?action=wbgetentities&ids={notation}&props=info|labels|descriptions|aliases",jsonp:!0,transform:function(item){console.log(item)}})}}function myController($scope,$http,$q,SkosConceptProvider,OpenSearchSuggestions,knownSchemes){$scope.schemes=knownSchemes,$scope.gndSubjectConcept=knownSchemes.gnd.getConcept,$scope.rvkSubjectConcept=knownSchemes.rvk.getConcept,$scope.rvkNarrowerConcepts=knownSchemes.rvk.getNarrower,$scope.rvkBroaderConcepts=knownSchemes.rvk.getBroader,$scope.loggedIn=!1,$scope.activeView={origin:"GND",target:"RVK"},$scope.setOrigin=function(scheme){""==scheme?($scope.activeView.origin=scheme,$scope.activeView.target=scheme,$scope.deleteAll(),$scope.originConcept="",$scope.originSubject="",$scope.targetConcept="",$scope.targetSubject=""):scheme!=$scope.activeView.origin&&""!=scheme&&($scope.activeView.origin=scheme,$scope.originConcept="",$scope.originSubject="",$scope.deleteAll(),$scope.changeTopOrigin(scheme)),""!=scheme&&scheme==$scope.activeView.target&&($scope.activeView.origin=scheme,$scope.activeView.target="",$scope.targetConcept="",$scope.targetSubject="",$scope.changeTopOrigin(scheme))},$scope.setTarget=function(scheme){""==scheme?($scope.activeView.target=scheme,$scope.targetConcept="",$scope.deleteAll()):scheme!=$scope.activeView.target&&scheme!=$scope.activeView.origin&&($scope.activeView.target=scheme,$scope.targetConcept="",$scope.targetSubject="",$scope.deleteAll(),$scope.changeTopTarget(scheme))},$scope.SuggestConcept=function(scheme){return scheme=scheme.toLowerCase(),$scope.schemes[scheme]?$scope.schemes[scheme].suggest:void 0},"RVK"==$scope.activeView.origin?knownSchemes.rvk.topConcepts.getConceptList().then(function(response){$scope.topOriginConcept=response}):"DDC"==$scope.activeView.origin,"RVK"==$scope.activeView.target?knownSchemes.rvk.topConcepts.getConceptList().then(function(response){$scope.topTargetConcept=response}):"DDC"==$scope.activeView.target,$scope.changeTopOrigin=function(scheme){"RVK"==scheme?knownSchemes.rvk.topConcepts.getConceptList().then(function(response){$scope.topOriginConcept=response}):"DDC"==scheme||($scope.topOriginConcept="")},$scope.changeTopTarget=function(scheme){"RVK"==scheme?knownSchemes.rvk.topConcepts.getConceptList().then(function(response){$scope.topTargetConcept=response}):"DDC"==scheme||($scope.topTargetConcept="")},$scope.showTopConcepts={origin:!0,target:!0},$scope.insertMapping=function(mapping){if(mapping.from)mapping.from[0].inScheme.notation[0]==$scope.activeView.origin&&mapping.to[0].inScheme.notation[0]==$scope.activeView.target&&($scope.currentMapping=angular.copy(mapping));else if(mapping.notation&&mapping.inScheme.notation[0]==$scope.activeView.target){var dupes=!1;angular.forEach($scope.currentMapping.to,function(value){value.notation[0]==mapping.notation[0]&&(dupes=!0)}),0==dupes&&$scope.currentMapping.to.push(mapping)}},$scope.currentMapping={from:[],to:[],type:"",source:"",timestamp:""},$scope.saveFrom=function(origin,item){$scope.currentMapping.from[0]={prefLabel:{de:item.prefLabel.de},inScheme:{notation:[origin]},notation:[item.notation[0]?item.notation[0]:originConcept.uri],uri:item.uri}},$scope.addTo=function(target,item){$scope.currentMapping.to.push({prefLabel:{de:item.prefLabel.de},inScheme:{notation:[target]},notation:[item.notation[0]],uri:item.uri})},$scope.checkDuplicate=function(){var res=!1;return angular.forEach($scope.currentMapping.to,function(value){var map=value;$scope.targetConcept.uri==map.uri&&(res=!0)}),res},$scope.replaceTo=function(target,item){$scope.currentMapping.to=[],$scope.currentMapping.to.push({prefLabel:{de:item.prefLabel.de},inScheme:{notation:[target]},notation:[item.notation[0]],uri:item.uri})},$scope.deleteAll=function(){$scope.currentMapping.to=[],$scope.currentMapping.from=[]},$scope.tempConcept={notation:[],uri:"",prefLabel:{de:""},broader:""},$scope.originNotation={},$scope.targetNotation={},$scope.selectOriginSubject=function(item){"GND"==$scope.activeView.origin?($scope.originConcept={uri:item.uri,prefLabel:{de:item.label}},$scope.gndSubjectConcept.updateConcept($scope.originConcept).then(function(){$scope.gndSubjectConcept.updateConnected($scope.originConcept)}),$scope.clickOriginConcept=function(concept){$scope.gndSubjectConcept.updateConcept($scope.originConcept=concept).then(function(){$scope.gndSubjectConcept.updateConnected($scope.originConcept)})}):"RVK"==$scope.activeView.origin&&($scope.originConcept={notation:[item.notation],uri:item.notation,prefLabel:{de:item.label}},$scope.rvkSubjectConcept.updateConcept($scope.originConcept).then(function(){$scope.tempConcept=angular.copy($scope.originConcept),$scope.originSubject=$scope.originConcept.prefLabel.de,1==$scope.originConcept.hasChildren?$scope.rvkNarrowerConcepts.updateConcept($scope.originConcept).then(function(){$scope.originConcept.altLabel=angular.copy($scope.tempConcept.altLabel),$scope.rvkBroaderConcepts.updateConcept($scope.tempConcept).then(function(){$scope.originConcept.broader=$scope.tempConcept.broader})}):($scope.tempConcept=angular.copy($scope.originConcept),$scope.rvkBroaderConcepts.updateConcept($scope.originConcept).then(function(){$scope.originConcept.altLabel=$scope.tempConcept.altLabel}))}),$scope.clickOriginConcept=function(concept){$scope.rvkSubjectConcept.updateConcept($scope.originConcept=concept).then(function(){$scope.tempConcept=angular.copy($scope.originConcept),1==$scope.originConcept.hasChildren?$scope.rvkNarrowerConcepts.updateConcept($scope.originConcept).then(function(){$scope.originConcept.altLabel=angular.copy($scope.tempConcept.altLabel),$scope.rvkBroaderConcepts.updateConcept($scope.tempConcept).then(function(){$scope.originConcept.broader=$scope.tempConcept.broader})}):($scope.tempConcept=angular.copy($scope.originConcept),$scope.rvkBroaderConcepts.updateConcept($scope.originConcept).then(function(){$scope.originConcept.altLabel=$scope.tempConcept.altLabel}))})})},$scope.selectTargetSubject=function(item){"GND"==$scope.activeView.target?($scope.targetConcept={uri:item.uri,prefLabel:{de:item.label}},$scope.gndSubjectConcept.updateConcept($scope.targetConcept).then(function(){$scope.gndSubjectConcept.updateConnected($scope.targetConcept)}),$scope.clickTargetConcept=function(concept){$scope.gndSubjectConcept.updateConcept($scope.targetConcept=concept).then(function(){$scope.gndSubjectConcept.updateConnected($scope.targetConcept)})}):"RVK"==$scope.activeView.target&&($scope.targetConcept={notation:[item.notation],uri:item.notation,prefLabel:{de:item.label}},$scope.rvkSubjectConcept.updateConcept($scope.targetConcept).then(function(){$scope.tempConcept=angular.copy($scope.targetConcept),1==$scope.targetConcept.hasChildren?$scope.rvkNarrowerConcepts.updateConcept($scope.targetConcept).then(function(){$scope.targetConcept.altLabel=angular.copy($scope.tempConcept.altLabel),$scope.rvkBroaderConcepts.updateConcept($scope.tempConcept).then(function(){$scope.targetConcept.broader=$scope.tempConcept.broader})}):($scope.tempConcept=angular.copy($scope.targetConcept),$scope.rvkBroaderConcepts.updateConcept($scope.targetConcept).then(function(){$scope.targetConcept.altLabel=$scope.tempConcept.altLabel}))}),$scope.clickTargetConcept=function(concept){$scope.rvkSubjectConcept.updateConcept($scope.targetConcept=concept).then(function(){$scope.tempConcept=angular.copy($scope.targetConcept),1==$scope.targetConcept.hasChildren?$scope.rvkNarrowerConcepts.updateConcept($scope.targetConcept).then(function(){$scope.targetConcept.altLabel=angular.copy($scope.tempConcept.altLabel),$scope.rvkBroaderConcepts.updateConcept($scope.tempConcept).then(function(){$scope.targetConcept.broader=$scope.tempConcept.broader})}):($scope.tempConcept=angular.copy($scope.targetConcept),$scope.rvkBroaderConcepts.updateConcept($scope.targetConcept).then(function(){$scope.targetConcept.altLabel=$scope.tempConcept.altLabel}))})})},$scope.reselectConcept=function(role,concept){"origin"==role?($scope.originConcept=concept.prefLabel?{notation:concept.notation?concept.notation:"",uri:concept.uri?concept.uri:concept.notation,label:concept.prefLabel.de}:concept.label?{notation:concept.notation?concept.notation:"",uri:concept.uri?concept.uri:concept.notation,label:concept.label}:{notation:concept.notation?concept.notation:"",uri:concept.uri?concept.uri:concept.notation},$scope.selectOriginSubject($scope.originConcept)):"target"==role&&($scope.targetConcept=concept.prefLabel?{notation:concept.notation?concept.notation:"",uri:concept.uri?concept.uri:concept.notation,label:concept.prefLabel.de}:concept.label?{notation:concept.notation?concept.notation:"",uri:concept.uri?concept.uri:concept.notation,label:concept.label}:{notation:concept.notation?concept.notation:"",uri:concept.uri?concept.uri:concept.notation},$scope.selectTargetSubject($scope.targetConcept))}}angular.module("jsonText",[]).directive("jsonText",function(){return{restrict:"AE",require:"ngModel",scope:{},link:function(scope,element,attrs,ngModel){function fromJson(text){try{return scope.jsonValid=!0,angular.fromJson(text)}catch(e){scope.jsonValid=!1}}function toJson(object){return angular.toJson(object,!0)}scope.jsonValid=!0,ngModel.$parsers.push(fromJson),ngModel.$formatters.push(toJson),scope.$watch(attrs.ngModel,function(newValue,oldValue){newValue!=oldValue&&(ngModel.$setViewValue(toJson(newValue)),ngModel.$render())},!0)}}}),angular.module("ngSKOS",["ngSanitize"]).value("version","0.0.1");var cocoda=angular.module("Cocoda",["ngSKOS","ui.bootstrap","ngSuggest"]);cocoda.service("knownSchemes",["OpenSearchSuggestions","SkosConceptProvider","SkosConceptListProvider",knownSchemes]),cocoda.run(["$rootScope","$http",function($rootScope,$http){$rootScope.mappingSample={},$http.get("http://localhost/data/mapping-1.json").success(function(data){$rootScope.mappingSample=data}),$rootScope.mappingSampleGND={},$http.get("http://localhost/data/mapping-2.json").success(function(data){$rootScope.mappingSampleGND=data}),$rootScope.occurrencesSample={},$http.get("http://localhost/data/occurrences-1.json").success(function(data){$rootScope.occurrencesSample=data})}]),cocoda.config(["$locationProvider",function($locationProvider){$locationProvider.html5Mode(!0)}]).controller("MainCtrl",["$$rootScope","$location",function(){}]),angular.module("ngSKOS").directive("skosConcept",function(){return{restrict:"AE",scope:{concept:"=skosConcept",language:"=language",click:"=skosClick"},templateUrl:function(elem,attrs){return attrs.templateUrl?attrs.templateUrl:"src/templates/skos-concept.html"},link:function(scope){scope.isEmptyObject=function(){var keys=Object.keys;return!(keys&&keys.length)},scope.$watch("concept",function(concept){angular.forEach(["uri","inScheme","ancestors","prefLabel","altLabel","note","notation","narrower","broader","related"],function(field){scope[field]=concept?concept[field]:null})},!0)}}}),angular.module("ngSKOS").directive("skosConceptList",["$timeout",function($timeout){return{restrict:"AE",scope:{concepts:"=skosConceptList",onSelect:"=onSelect",canRemove:"=removeable",showLabels:"=showLabels"},templateUrl:function(elem,attrs){return attrs.templateUrl?attrs.templateUrl:"src/templates/skos-concept-list.html"},link:function(scope){scope.$watch("concepts"),scope.ID=Math.random().toString(36).slice(2),scope.removeConcept=function(index){scope.concepts.splice(index,1)},scope.focusConcept=function(index){var fc=angular.element("[list-id="+scope.ID+"_"+index+"]");fc.focus()},scope.tabFocus=0,scope.onClick=function(index){scope.tabFocus=index,scope.onSelect(scope.concepts[index])},scope.onFocus=function(index){scope.tabFocus=index},scope.onKeyDown=function($event,first,last,index){var key=$event.keyCode,length=scope.concepts.length;-1!=[38,40,46,13].indexOf(key)&&0!=length&&($event.preventDefault(),38==key?(scope.tabFocus=(scope.tabFocus+length-1)%length,$timeout(function(){scope.focusConcept(scope.tabFocus)},0,!1)):40==key?(scope.tabFocus=(scope.tabFocus+1)%length,$timeout(function(){scope.focusConcept(scope.tabFocus)},0,!1)):46==key&&1==scope.canRemove?(last&&scope.tabFocus--,scope.removeConcept(index),$timeout(function(){scope.focusConcept(scope.tabFocus)},0,!1)):13==key&&($event.preventDefault(),scope.onSelect(scope.concepts[index])))}}}}]),angular.module("ngSKOS").directive("skosConceptMapping",function(){return{restrict:"A",scope:{mapping:"=skosConceptMapping",from:"=mappingFrom",to:"=mappingTo",selectO:"=selectOriginConcept",selectT:"=selectTargetConcept",save:"=saveMapping"},templateUrl:function(elem,attrs){return attrs.templateUrl?attrs.templateUrl:"src/templates/skos-concept-mapping.html"},link:function(scope){scope.selectFrom=function(concept){scope.selectO(concept)},scope.selectTo=function(concept){scope.selectT(concept)},scope.saveMapping=function(){scope.mapping.timestamp=(new Date).toISOString().slice(0,10),scope.mapping.source=function(){},scope.saved=!0},scope.clearTargets=function(){scope.mapping.to=[]},scope.$watch("mapping.to",function(){scope.saved=!1},!0),scope.$watch("mapping.from",function(){scope.saved=!1},!0)}}}),angular.module("ngSKOS").directive("skosLabel",function(){return{restrict:"A",scope:{concept:"=skosLabel"},template:'{{concept.prefLabel[language] ? concept.prefLabel[language] : "???"}}',link:function(scope,element,attrs){function updateLanguage(language){scope.language=language?language:attrs.lang,language=scope.concept?selectLanguage(scope.concept.prefLabel,scope.language):"",language!=scope.language&&(scope.language=language)}function selectLanguage(labels,language){if(angular.isObject(labels)){if(language&&labels[language])return language;for(language in labels)return language}}attrs.$observe("lang",updateLanguage),scope.$watch("concept.prefLabel",function(){updateLanguage()},!0)}}}),angular.module("ngSKOS").directive("skosMappingCollection",function(){return{restrict:"A",scope:{mappings:"=skosMappingCollection",useMapping:"=useMapping",lookUp:"=lookUpMapping"},templateUrl:function(elem,attrs){return attrs.templateUrl?attrs.templateUrl:"src/templates/skos-mapping-collection.html"},link:function(scope){scope.$watch("hidden")},controller:["$scope",function($scope){$scope.status={},angular.forEach($scope.mappings,function(key){angular.forEach(key,function(key,value){$scope.status[value]={open:!0}})})}]}}),angular.module("ngSKOS").directive("skosMappingTable",function(){return{restrict:"A",scope:{mapping:"=skosMappingTable",select:"=selectMapping",lookup:"=lookupMapping"},templateUrl:function(elem,attrs){return attrs.templateUrl?attrs.templateUrl:"src/templates/skos-mapping-table.html"},link:function(){},controller:["$scope",function($scope){$scope.predicate="-timestamp"}]}}),angular.module("ngSKOS").directive("skosOccurrences",function(){return{restrict:"A",scope:{occurrence:"=skosOccurrences",select:"=selectOccurrence",lookup:"=lookUpOccurrence"},templateUrl:function(elem,attrs){return attrs.templateUrl?attrs.templateUrl:"src/templates/skos-occurrences.html"},link:function(scope){angular.forEach(["search","database","target","total","hits"],function(field){scope[field]=scope.occurrence[field]})},controller:["$scope",function($scope){$scope.status={open:!0}}]}}),angular.module("ngSKOS").factory("SkosConceptListProvider",["SkosProvider",function(SkosProvider){var SkosConceptListProvider=function(args){SkosProvider.call(this,args)};return SkosConceptListProvider.prototype=new SkosProvider,SkosConceptListProvider.prototype.getConceptList=function(){return this.get()},SkosConceptListProvider.prototype.updateConceptList=function(){return this.getConceptList(list).then(function(response){angular.copy(response,list)})},SkosConceptListProvider}]),angular.module("ngSKOS").factory("SkosConceptProvider",["SkosProvider",function(SkosProvider){var SkosConceptProvider=function(args){SkosProvider.call(this,args)};return SkosConceptProvider.prototype=new SkosProvider,SkosConceptProvider.prototype.getConcept=function(concept){var url;if(this.url)if(angular.isFunction(this.url))url=this.url(concept);else{if(url=this.url,concept.notation){var notation=concept.notation[0];url=url.replace("{notation}",decodeURIComponent(notation))}url=url.replace("{uri}",decodeURIComponent(concept.uri))}else url=concept.uri;return this.get(url)},SkosConceptProvider.prototype.updateConcept=function(concept){return this.getConcept(concept).then(function(response){angular.copy(response,concept)})},SkosConceptProvider.prototype.updateConnected=function(concept,which){angular.isString(which)?which=[which]:angular.isArray(which)||(which=["broader","narrower","related"]);var service=this;angular.forEach(which,function(w){angular.forEach(concept[w],function(c){service.updateConcept(c)})})},SkosConceptProvider}]),angular.module("ngSKOS").factory("SkosProvider",["$http","$q",function($http,$q){var SkosProvider=function(args){args||(args={}),this.transform=args.transform,this.url=args.url;var jsonp=args.jsonp;jsonp&&(jsonp===!0||angular.isNumber(jsonp)||jsonp.match(/^\d/))&&(jsonp="callback"),this.jsonp=jsonp};return SkosProvider.prototype={get:function(url){url||(url=this.url);var transform=this.transform,get=$http.get;return this.jsonp&&(get=$http.jsonp,url+=-1==url.indexOf("?")?"?":"&",url+=this.jsonp+"=JSON_CALLBACK"),get(url).then(function(response){try{return transform?transform(response.data):response.data}catch(e){return console.error(e),$q.reject(e)}},function(response){return console.error(response),$q.reject(response.data)})}},SkosProvider}]),angular.module("ngSKOS").run(["$templateCache",function($templateCache){"use strict";$templateCache.put("template/skos-concept-list.html",'<div style="font-size:1.5em"><ul ng-if="concepts.length" style="list-style-type:none;padding-left:0px"><li ng-repeat="c in concepts" style="max-width:320px;display:block"><div style="text-align:right;padding-left:3px;padding-right:3px" tabindex="0" ng-keydown="onKeyDown($event, $first, $last, $index)" list-id="{{ID + \'_\' + $index}}" ng-focus="onFocus($index)"><span class="notation" style="whitespace:nowrap" title="{{c.prefLabel.de}}" ng-click="onClick($index)">{{c.notation[0]}}</span> <span ng-if="showLabels" skos-label="c" lang="{{language}}" class="skos-list-label" ng-click="onClick($index)"></span><div style="display:inline-table"><a href="" ng-click="onSelect(c)" style="text-decoration:none" title="Select concept (ENTER)"><span style="vertical-align:middle;top:0px" class="glyphicon glyphicon-info-sign"></span></a> <a href="" ng-click="removeConcept($index)" style="text-decoration:none" title="Remove concept (DEL)"><span style="vertical-align:middle;top:0px" class="glyphicon glyphicon-trash"></span></a></div></div></li></ul></div>'),$templateCache.put("template/skos-concept-mapping.html",'<div><div ng-if="!from.length && !to.length" style="margin-top:50px;margin-bottom:40px;text-align:center"><alert type="danger" style="display:inline-block">Please choose a concept scheme for mapping</alert></div><div ng-if="mapping.from.length && !from.length && !to.length" style="margin-top:10px;margin-bottom:5px;text-align:center"><alert type="danger">Please choose a term to work on</alert></div><div ng-if="from.length || mapping.to[0].notation.length" style="width:100%"><table style="width:95%;margin:0 auto;align:center"><thead class="simple-list" style="text-align:center"><tr><th style="width:400px"></th><th style="width:24px"></th><th style="width:400px;text-align:right"></th></tr></thead><tbody><tr><td><div class="tmpl-border mappingResults-from"><div ng-if="mapping.from.length" style="font-size:1.5em"><skos-list concepts="mapping.from" on-select="selectFrom" removeable="true" class="mapping-list"></skos-list></div><div ng-if="!mapping.from.length"><alert type="danger">Please select a source mapping term</alert></div></div></td><td><div style="margin:30px auto"><big><span class="glyphicon glyphicon-arrow-right"></span></big></div></td><td><div class="tmpl-border mappingResults-to" style="float:right"><div ng-if="mapping.to.length" style="font-size:1.5em"><skos-list concepts="mapping.to" on-select="selectTo" removeable="true" class="mapping-list mapping-target-list"></skos-list></div><div ng-if="!mapping.to.length && mapping.from.length"><alert style="margin-bottom:0px" type="danger">Add target mapping terms (<span style="color:#428bca" class="glyphicon glyphicon-plus"></span>)</alert></div></div></td></tr></tbody></table></div><div ng-if="from.length && to.length"><div style="width:95%;margin:0 auto"><div style="float:right;margin-top:10px"><button ng-if="save" ng-click="saveMapping()" ng-disabled="!mapping.from.length || !mapping.to.length" title="Save current mapping" accesskey="s"><span style="margin-right:5px">Save</span> <span class="glyphicon glyphicon-save"></span></button></div><div ng-if="mapping.to.length" style="float:right;margin-top:10px;margin-right:10px"><button ng-click="clearTargets()" title="Clear all target mappings" accesskey="c"><span style="margin-right:5px">Clear all</span> <span class="glyphicon glyphicon-remove"></span></button></div><div ng-if="mapping.timestamp && mapping.to.length" style="float:right;margin-top:13px;margin-right:15px">Created: <span>{{mapping.timestamp}}</span></div><div ng-if="saved" style="float:left;margin-top:5px"><alert type="success">Mapping Saved!</alert></div></div></div></div>'),$templateCache.put("template/skos-concept-thesaurus.html",'<div class="skos-concept-thesaurus"><ul ng-if="ancestors.length" class="ancestors"><span ng-if="inScheme" class="classification">{{inScheme}}</span><li class="ancestor" ng-repeat="a in ancestors"><span skos-label="a" lang="{{language}}" ng-click="update(a);reload();"></span></li></ul><div class="top top-classic"><span ng-if="notation" class="notation">{{notation[0]}}</span> <b><span skos-label="concept" lang="{{language}}"></span></b><a ng-if="notation" class="uri" href="{{uri}}"><span style="vertical-align:-10%" class="glyphicon glyphicon-globe"></span></a></div><div ng-if="altLabel.length" class="skos-concept-altlabel"><ul><li ng-repeat="alt in altLabel"><span ng-if="$index < 5" style="display:inline">{{alt}}</span> <span style="margin-left:-4px;margin-right:3px" ng-if="$index < 4 && $index < altLabel.length-1">,</span></li></ul></div><div ng-if="broader.length" class="skos-concept-thesaurus-relation"><b>Broader Terms:</b><ul ng-repeat="b in broader"><li><span skos-label="b" lang="{{language}}" ng-click="click(b)"></li></ul></div><div ng-if="narrower.length" class="skos-concept-thesaurus-relation"><b>Narrower Terms:</b><ul ng-repeat="n in narrower"><li><span skos-label="n" lang="{{language}}" ng-click="click(n)"></li></ul></div><div ng-if="related.length" class="skos-concept-thesaurus-relation"><b>Related Terms:</b><ul ng-repeat="r in related"><li><span skos-label="r" lang="{{language}}" ng-click="click(r)"></li></ul></div></div>'),$templateCache.put("template/skos-concept.html",'<div class="skos-concept"><div class="top top-alt"><span ng-if="notation.length" class="notation">{{notation[0]}}</span> <b><span ng-if="prefLabel" skos-label="concept" lang="{{language}}"></span></b> <a ng-if="uri && uri != notation" class="uri" href="{{uri}}" target="blank"><span class="glyphicon glyphicon-globe"></span></a></div><div ng-if="altLabel.length" class="skos-concept-altlabel"><ul><li ng-repeat="alt in altLabel"><span ng-if="$index < 5" style="display:inline">{{alt}}</span> <span style="margin-left:-4px;margin-right:3px" ng-if="$index < 4 && $index < altLabel.length-1">,</span></li></ul></div><div ng-if="broader.length || narrower.length || related.length" class="skos-concept-connected"><div ng-if="broader.length" class="skos-concept-relation skos-concept-relation-broader"><ul ng-repeat="c in broader"><li style="display:inline-table"><i class="notation connected-notation">{{c.notation[0]}}</i><span skos-label="c" lang="{{language}}" ng-click="click(c)" title="{{c.notation[0]}}" tabindex="0"></span></li></ul></div><div ng-if="narrower.length" class="skos-concept-relation skos-concept-relation-narrower"><ul ng-repeat="c in narrower" style="margin-left:1em"><li style="display:inline-table"><i class="notation connected-notation">{{c.notation[0]}}</i><span skos-label="c" lang="{{language}}" ng-click="click(c)" title="{{c.notation[0]}}" tabindex="0"></span></li></ul></div><div ng-if="related.length" class="skos-concept-relation skos-concept-relation-related"><ul ng-repeat="c in related"><li style="display:inline-table"><i class="notation connected-notation">{{c.notation[0]}}</i><span skos-label="c" lang="{{language}}" ng-click="click(c)" title="{{c.notation[0]}}" tabindex="0"></span></li></ul></div></div><div ng-if="!isEmptyObject(note)" style="margin-top:10px"><div ng-repeat="note in note.en" style="width:100%;padding:4px 6px;border:1px solid #ddd;margin-top:8px"><em>{{note}}</em></div></div></div>'),$templateCache.put("template/skos-mapping-collection.html",'<accordion close-others="false"><div ng-repeat="s in mappings"><div ng-repeat="(skey, source) in s"><accordion-group is-open="status[skey].open" style="margin-bottom:6px"><accordion-heading><b>{{skey}}</b> <i class="pull-right glyphicon" ng-class="{\'glyphicon-chevron-down\': status[skey].open, \'glyphicon-chevron-right\': !status[skey].open}"></i></accordion-heading><div ng-repeat="f in source"><span ng-repeat="(fkey, from) in f"><span ng-repeat="t in from"><span ng-repeat="(tkey, to) in t"><div skos-mapping-table="to" select-mapping="useMapping" lookup-mapping="lookUp"></div></span></span></span></div></accordion-group></div></div></accordion>'),$templateCache.put("template/skos-mapping-table.html",'<table style="white-space:nowrap" class="table table-hover table-condensed table-bordered"><thead><tr><th><span class="classification">{{mapping[0].from[0].inScheme.notation[0]}}</span></th><th><span class="classification">{{mapping[0].to[0].inScheme.notation[0]}}</span></th><th ng-if="type"><span style="margin-right:3px">Type</span> <a ng-click="predicate = \'type.value\';reverse = !reverse" href="" style="text-decoration:none;font-size:0.8em"><span class="glyphicon glyphicon-sort"></span></a></th><th><span style="margin-right:3px">Creator</span> <a ng-click="predicate = \'creator\';reverse = !reverse" href="" style="text-decoration:none;font-size:0.8em"><span class="glyphicon glyphicon-sort"></span></a></th><th style="width:100px"><span style="margin-right:3px">Date</span> <a ng-click="predicate = \'timestamp\';reverse = !reverse" href="" style="text-decoration:none;font-size:0.8em"><span class="glyphicon glyphicon-sort"></span></a></th><th ng-if="select"></th></tr></thead><tbody><tr ng-repeat="m in mapping | orderBy:predicate:reverse"><td><ul class="simple-list" style="margin-bottom:0px"><li ng-repeat="f in m.from"><span class="notation" style="max-width:85px;white-space:nowrap" popover="{{f.prefLabel.de}}" popover-trigger="mouseenter">{{f.notation[0]}}</span></li></ul></td><td><ul class="simple-list" style="margin-bottom:0px;margin-top:2px"><li ng-repeat="t in m.to"><div class="skos-mapping-target" style=""><span class="notation" popover="{{t.prefLabel.de}}" popover-trigger="mouseenter">{{t.notation[0]}}</span> <a ng-if="lookup" title="Look up term" style="font-size:0.85em;cursor:pointer"><span ng-click="lookup(t)"><span style="top:2px;vertical-align:top" class="glyphicon glyphicon-info-sign"></span></span></a> <a ng-if="select" title="Add mapping term" style="font-size:0.85em;cursor:pointer"><span ng-click="select(t)"><span style="vertical-align:top" class="glyphicon glyphicon-plus"></span></span></a></div></li></ul></td><td ng-if="type">{{m.type.prefLabel.en}}</td><td class="skos-mapping-cell" style="vertical-align:middle"><span>{{m.creator}}</span></td><td class="skos-mapping-cell" style="vertical-align:middle;max-width:100px"><span>{{m.timestamp}}</span></td><td ng-if="select" style="vertical-align:middle" class="skos-mapping-cell"><a style="cursor:pointer" ng-click="select(m)" title="Select mapping"><span class="glyphicon glyphicon-open"></span></a></td></tr></tbody></table>'),$templateCache.put("template/skos-mapping.html",'<div class="skos-mapping"><table style="width:100%"><thead><tr style="width:100%"><th style="width:45%"><span class="classification">{{mapping[0].from[0].inScheme.notation[0]}}</span></th><th style="width:10%"></th><th style="width:45%"><span class="classification">{{mapping[0].to[0].inScheme.notation[0]}}</span></th></tr></thead></table><div ng-repeat="m in mapping"><table style="width:100%"><thead><tr style="width:100%"><th style="width:45%"></th><th style="width:10%"></th><th style="width:45%"></th></tr></thead><tbody class="mappingResults"><tr style="vertical-align:top"><td><div class="mappingResults-from"><ul><li ng-repeat="from in m.from"><span class="notation" popover="{{from.prefLabel.en}}" popover-trigger="mouseenter">{{from.notation[0]}}</span></li></ul></div></td><td><div class="mappingResults-icon"><big><span ng-if="m.from.length || m.to.length" class="glyphicon glyphicon-arrow-right"></span></big></div></td><td><div class="mappingResults-to"><ul><li ng-repeat="target in m.to"><span class="notation" popover="{{target.prefLabel.en}}" popover-trigger="mouseenter">{{target.notation[0]}}</span></li></ul></div></td></tr></tbody></table><div class="mappingFoot"><ul ng-if="m.from.length"><li><span><b>Type:</b></span> <span>{{m.type}}</span> <span><b>Date added:</b></span> <span>{{m.timestamp}}</span> <span><b>Database:</b></span> <span>{{m.source}}</span> <button style="float:right" ng-click="useMapping(m)" ng-if="useMapping">Use</button></li></ul></div><div ng-if="$index < mapping.length-1" style="border-bottom:1px solid black;margin-bottom:5px"></div></div></div>'),$templateCache.put("template/skos-occurrences.html",'<accordion><accordion-group is-open="status.open"><accordion-heading><b>Catalog Occurrences</b><i class="pull-right glyphicon" ng-class="{\'glyphicon-chevron-down\': status.open, \'glyphicon-chevron-right\': !status.open}"></i></accordion-heading><div class="skos-occurrences"><div class="skos-occurrences occ-details"><table><tr><td>Used notation:</td><td><span ng-if="search.length" class="notation" popover="{{search[0].prefLabel.de}}" popover-trigger="mouseenter">{{search[0].notation[0]}}</span></td></tr><tr><td>Used database:</td><td><span ng-if="search.length" class="dbase">{{database.notation[0]}}</span></td></tr><tr ng-if="search.length"><td>Results (total) for <span ng-if="search.length" class="notation" popover="{{search[0].prefLabel.de}}" popover-trigger="mouseenter">{{search[0].notation[0]}}</span>:</td><td>{{total}}</td></tr></table></div><div class="skos-occurrences occ-results">Corresponding notations in <span ng-if="search.length" class="classification">{{target.notation[0]}}</span>:<table ng-if="search.length" class="table table-hover table-condensed table-bordered"><thead><tr><th>Notation</th><th>Hits</th><th>% of total</th></tr></thead><tbody><tr ng-repeat="not in hits"><td><div style="width:100%;clear:both"><span ng-if="not.length" class="notation" popover="{{not[0].prefLabel.de}}" popover-trigger="mouseenter">{{not[0].notation[0]}}</span> <a ng-if="lookup" title="Look up term" style="font-size:0.85em;cursor:pointer"><span ng-click="lookup(not[0])" class="skos-link-icon" title="Look up notation"><span class="glyphicon glyphicon-info-sign"></span></span></a> <a ng-if="select" title="Add mapping term" style="font-size:0.85em;cursor:pointer"><span ng-click="select(not[0])" class="skos-link-icon" title="Select concept"><span class="glyphicon glyphicon-plus"></span></span></a></div></td><td>{{not[1]}}</td><td>{{not[1]/total*100 | number:1}} %</td></tr></tbody></table></div></div></accordion-group></accordion>')
}]);